
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/image_border.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_image_border.py>`
        to download the full example as a Python script or as a
        Jupyter notebook.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_image_border.py:


Layer Bounding Box (Border) Overlay
===================================

Display an image in napari and add a bounding box overlay (a border) at the edges of the layer.

The bounding box overlay is a visual representation of the extents of a layer.
This example demonstrates visualization of many bounding box overlay properties,
including line color, line thickness, point size, opacity.
In addition, this viewer shows how layer overlays interact when draw on top of each other (at the intersection of the grid).
Use `viewer.layers[0].bounding_box` to view all modifiable attributes of the overlay.

For an example showing how bounding box extents are visualized, see
:ref:`sphx_glr_gallery_layer_bounding_box.py`.

.. tags:: visualization-advanced

.. GENERATED FROM PYTHON SOURCE LINES 18-44



.. image-sg:: /gallery/images/sphx_glr_image_border_001.png
   :alt: image border
   :srcset: /gallery/images/sphx_glr_image_border_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    from skimage import data

    import napari

    # Create a napari viewer with a 3D, 2 channel image, with the `view_image` convenience function.
    viewer = napari.view_image(
        data.cells3d(), channel_axis=1, name=['membrane', 'nuclei']
    )
    viewer.grid.enabled = True

    # Add a border overlay to each layer, and modify properties of the border overlay.
    viewer.layers[0].bounding_box.visible = True
    viewer.layers[0].bounding_box.line_color = 'cyan' # default: 'red'
    viewer.layers[0].bounding_box.line_thickness = 5 # default: 1, maximum is GPU-dependent, see: https://vispy.org/api/vispy.scene.visuals.html#vispy.scene.visuals.Line
    viewer.layers[0].bounding_box.point_size = 10 # default: 5
    viewer.layers[0].bounding_box.point_color = 'yellow' # default: 'blue'

    viewer.layers[1].bounding_box.visible = True
    viewer.layers[1].bounding_box.line_color = 'orange'
    viewer.layers[1].bounding_box.line_thickness = 2
    viewer.layers[1].bounding_box.opacity = 0.8 # default: 1
    # viewer_2d.layers[1].bounding_box.blending = 'additive' # default: 'translucent'

    if __name__ == '__main__':
        napari.run()


.. _sphx_glr_download_gallery_image_border.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: image_border.ipynb <image_border.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: image_border.py <image_border.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: image_border.zip <image_border.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
