
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/surface_timeseries.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_surface_timeseries.py>`
        to download the full example as a Python script or as a
        Jupyter notebook.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_surface_timeseries.py:


Surface timeseries
==================

Display a surface timeseries using data from nilearn

.. tags:: experimental

.. GENERATED FROM PYTHON SOURCE LINES 9-47



.. image-sg:: /gallery/images/sphx_glr_surface_timeseries_001.png
   :alt: surface timeseries
   :srcset: /gallery/images/sphx_glr_surface_timeseries_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [_add_readme_to_default_data_locations] Added README.md to 
    /home/runner/nilearn_data
    [get_dataset_dir] Dataset created in 
    /home/runner/nilearn_data/nki_enhanced_surface
    [fetch_single_file] Downloading data from 
    https://www.nitrc.org/frs/download.php/8470/pheno_nki_nilearn.csv ...
    [fetch_single_file]  ...done. (2 seconds, 0 min)

    [fetch_single_file] Downloading data from 
    https://www.nitrc.org/frs/download.php/8261/A00028185_rh_preprocessed_fsaverage5
    _fwhm6.gii ...
    [_chunk_report_] Downloaded 4194304 of 42412120 bytes (9.9%%,    9.5s remaining)
    [_chunk_report_] Downloaded 9207808 of 42412120 bytes (21.7%%,    7.4s 
    remaining)
    [_chunk_report_] Downloaded 13959168 of 42412120 bytes (32.9%%,    6.3s 
    remaining)
    [_chunk_report_] Downloaded 18595840 of 42412120 bytes (43.8%%,    5.3s 
    remaining)
    [_chunk_report_] Downloaded 21897216 of 42412120 bytes (51.6%%,    4.8s 
    remaining)
    [_chunk_report_] Downloaded 27377664 of 42412120 bytes (64.6%%,    3.4s 
    remaining)
    [_chunk_report_] Downloaded 35430400 of 42412120 bytes (83.5%%,    1.4s 
    remaining)
    [fetch_single_file]  ...done. (10 seconds, 0 min)

    [fetch_single_file] Downloading data from 
    https://www.nitrc.org/frs/download.php/8260/A00028185_lh_preprocessed_fsaverage5
    _fwhm6.gii ...
    [_chunk_report_] Downloaded 9363456 of 42402060 bytes (22.1%%,    3.5s 
    remaining)
    [_chunk_report_] Downloaded 16015360 of 42402060 bytes (37.8%%,    3.3s 
    remaining)
    [_chunk_report_] Downloaded 22257664 of 42402060 bytes (52.5%%,    2.7s 
    remaining)
    [_chunk_report_] Downloaded 26116096 of 42402060 bytes (61.6%%,    2.5s 
    remaining)
    [_chunk_report_] Downloaded 34496512 of 42402060 bytes (81.4%%,    1.2s 
    remaining)
    [_chunk_report_] Downloaded 40919040 of 42402060 bytes (96.5%%,    0.2s 
    remaining)
    [fetch_single_file]  ...done. (7 seconds, 0 min)







|

.. code-block:: Python

    from importlib.metadata import version

    from nilearn import datasets, surface
    from packaging.version import parse

    import napari

    if parse(version("numpy")) >= parse('1.24') and parse(version("nilearn")) < parse('0.10.1'):
        raise RuntimeError(
            'Incompatible numpy version. '
            'You must have numpy less than 1.24 for nilearn 0.10.1 and below to '
            'work and download the example data'
        )


    # Fetch datasets - this will download dataset if datasets are not found
    nki_dataset = datasets.fetch_surf_nki_enhanced(n_subjects=1)
    fsaverage = datasets.fetch_surf_fsaverage()

    # Load surface data and resting state time series from nilearn
    brain_vertices, brain_faces = surface.load_surf_data(fsaverage['pial_left'])
    brain_vertex_depth = surface.load_surf_data(fsaverage['sulc_left'])
    timeseries = surface.load_surf_data(nki_dataset['func_left'][0])
    # nilearn provides data as n_vertices x n_timepoints, but napari requires the
    # vertices axis to be placed last to match NumPy broadcasting rules
    timeseries = timeseries.transpose((1, 0))

    # create an empty viewer
    viewer = napari.Viewer(ndisplay=3)

    # add the mri
    viewer.add_surface((brain_vertices, brain_faces, brain_vertex_depth), name='base')
    viewer.add_surface((brain_vertices, brain_faces, timeseries),
                        colormap='turbo', opacity=0.9,
                        contrast_limits=[-1.5, 3.5], name='timeseries')

    if __name__ == '__main__':
        napari.run()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 21.321 seconds)


.. _sphx_glr_download_gallery_surface_timeseries.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: surface_timeseries.ipynb <surface_timeseries.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: surface_timeseries.py <surface_timeseries.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: surface_timeseries.zip <surface_timeseries.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
